"""
3. Есть два файла: в одном хранятся ФИО пользователей сайта, а в другом — данные об их хобби. Известно, что при
хранении данных используется принцип: одна строка — один пользователь, разделитель между значениями — запятая.
Написать код, загружающий данные из обоих файлов и формирующий из них словарь: ключи — ФИО, значения — данные о хобби.
Сохранить словарь в файл. Проверить сохранённые данные. Если в файле, хранящем данные о хобби, меньше записей, чем в
файле с ФИО, задаём в словаре значение None. Если наоборот — выходим из скрипта с кодом «1». При решении задачи считать,
 что объём данных в файлах во много раз меньше объема ОЗУ.
Фрагмент файла с данными о пользователях (users.csv):
Иванов,Иван,Иванович
Петров,Петр,Петрович
Фрагмент файла с данными о хобби (hobby.csv):
скалолазание,охота
горные лыжи
4. * (вместо 3) Решить задачу 3 для ситуации, когда объём данных в файлах превышает объём ОЗУ (разумеется, не нужно
реально создавать такие большие файлы, это просто задел на будущее проекта). Также реализовать парсинг данных из файлов
 - получить отдельно фамилию, имя и отчество для пользователей и название каждого хобби: преобразовать в какой-нибудь
 контейнерный тип (список, кортеж, множество, словарь). Обосновать выбор типа. Подумать, какие могут возникнуть проблемы
 при парсинге. В словаре должны храниться данные, полученные в результате парсинга.

5. ** (вместо 4) Решить задачу 4 и реализовать интерфейс командной строки, чтобы можно было задать путь к обоим
 исходным файлам и путь к выходному файлу со словарём. Проверить работу скрипта для случая, когда все файлы находятся
 в разных папках.
"""

import json, sys

if __name__ == '__main__':
    # Можно задать аргументы
    # Пример: task_5.py D:\Download\user.csv C:\Python\hobby.csv D:\out.json
    args = sys.argv
    if len(args) == 4:
        file_name_users = args[1]
        file_name_hobby = args[2]
        result_file = args[3]
    else:
        file_name_users = "users.csv"
        file_name_hobby = "hobby.csv"
        result_file = "users_hobby.json"
    print(f'Файл пользователей: {file_name_users}')
    print(f'Файл хобби: {file_name_hobby}')
    print(f'Файл результата объеденения: {result_file}')




    with open(file_name_users, "r", encoding="utf-8") as users_file:
        with open(file_name_hobby, "r", encoding="utf-8") as hobby_file:
            with open(result_file, "w", encoding="utf-8") as j:
                """ Формируем словарь непосредственно в файле, т.к. при размере файлов users и hobby больше ОЗУ
                # словарь превысит размер ОЗУ """
                j.writelines(["{"])
                # получаем словарь имени в виде ['фам', 'имя', 'отч']
                # словарь выбран для дальнейшего загрузки с помощью json
                user_0 = users_file.readline().replace("\n", "").split(",")
                # получаем словарь хобби в виде ['хоб1', 'хоб2', 'хоб3']
                hobby_0 = hobby_file.readline().replace("\n", "").split(",")
                # далее читаем и записываем построчно
                while user_0:
                    j.writelines([f'"{user_0}": "{hobby_0}"'])
                    u = users_file.readline().replace("\n", "")
                    if u == '':
                        user_0 = []
                    else:
                        user_0 = u.split(",")

                    h = hobby_file.readline().replace("\n", "")
                    if h == '':
                        hobby_0 = []
                    else:
                        hobby_0 = h.split(",")

                    # Если user закончились, а hobby еще есть, то возвращаем код 1
                    if user_0 == [] and hobby_0 != []: sys.exit(1)
                    # Если hobby закончились, то ставим None
                    if hobby_0 == []: hobby_0 = None
                    # записываем разделитель словаря (для корректной записи json)
                    if user_0 != [] and hobby_0 != []: j.writelines([", "])

                j.writelines(["}"])

    # Читаем полученный json файл
    with open(result_file, "r", encoding="utf-8") as j:
        dict_control = json.load(j)
    print(dict_control)

